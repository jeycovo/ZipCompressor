package GUI;

import java.io.File;
import java.io.FileFilter;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Entrar
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    private final JFileChooser fc;
    private File origen;
    private File destino;
    private final boolean SALIDA = false;
    private final boolean ENTRADA = true;
    
    public VentanaPrincipal() {
        initComponents();
        //Inicilizaci√≥n del JFileChooser
        this.fc = new JFileChooser();
        this.fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonBuscarDocs = new javax.swing.JButton();
        botonBuscarDir = new javax.swing.JButton();
        jTextDocs = new javax.swing.JTextField();
        jTextDir = new javax.swing.JTextField();
        jProgressDocs = new javax.swing.JProgressBar();
        jProgressDir = new javax.swing.JProgressBar();
        jButtonComprimir = new javax.swing.JButton();
        jLabelProgressDocs = new javax.swing.JLabel();
        jLabelProgressDir = new javax.swing.JLabel();
        jLabelMensajeError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        botonBuscarDocs.setText("Buscar");
        botonBuscarDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarDocsActionPerformed(evt);
            }
        });

        botonBuscarDir.setText("Buscar");
        botonBuscarDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarDirActionPerformed(evt);
            }
        });

        jTextDocs.setEditable(false);
        jTextDocs.setBackground(java.awt.Color.white);
        jTextDocs.setText("Carpeta a comprimir...");
        jTextDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDocsActionPerformed(evt);
            }
        });

        jTextDir.setEditable(false);
        jTextDir.setBackground(java.awt.Color.white);
        jTextDir.setForeground(new java.awt.Color(20, 20, 20));
        jTextDir.setText("Carpeta destino...");

        jButtonComprimir.setText("Comprimir");
        jButtonComprimir.setEnabled(false);
        jButtonComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComprimirActionPerformed(evt);
            }
        });

        jLabelProgressDocs.setText("0%");

        jLabelProgressDir.setText("0%");

        jLabelMensajeError.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextDocs, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelProgressDocs, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelProgressDir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jProgressDir, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jTextDir, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelMensajeError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonBuscarDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonBuscarDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonComprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscarDocs)
                    .addComponent(jTextDocs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscarDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMensajeError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelProgressDocs)
                            .addComponent(jProgressDocs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jProgressDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelProgressDir)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButtonComprimir)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDocsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDocsActionPerformed

    private void botonBuscarDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarDocsActionPerformed
        selDir(ENTRADA);
        dirComprobacion();
    }//GEN-LAST:event_botonBuscarDocsActionPerformed

    private void botonBuscarDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarDirActionPerformed
        selDir(SALIDA);
        dirComprobacion();
    }//GEN-LAST:event_botonBuscarDirActionPerformed

    private void jButtonComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComprimirActionPerformed
        comprimir();
    }//GEN-LAST:event_jButtonComprimirActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }
    
    private void selDir(boolean a){
        if(a == ENTRADA){
            if(origen != null){
                fc.setCurrentDirectory(origen);
            }
        }else{
            if(destino != null){
                fc.setCurrentDirectory(destino);
            }
        }
        
        int res = fc.showOpenDialog(null);
        if(res == JFileChooser.APPROVE_OPTION) {
            System.out.println("Se ha seleccionado un directorio: " + fc.getSelectedFile());
            if (a == ENTRADA){
                this.origen = fc.getSelectedFile();
                jTextDocs.setText(this.origen.toString());
            }else{
                this.destino = fc.getSelectedFile();
                jTextDir.setText(this.destino.toString());
            }
        }else{
            System.out.println("No se ha seleccionado nada.");
        }  
    }
    private void dirComprobacion(){
        if(jButtonComprimir.isEnabled()) jButtonComprimir.setEnabled(false);
        if(!origen.exists()){
            jLabelMensajeError.setText("La carpeta a comprimir debe existir...");
            origen = null;
        }else{
            if(origen != null && destino != null){
                if(origen.equals(destino)){
                    jLabelMensajeError.setText("Selecciona carpetas distintas...");
                }else{
                    jButtonComprimir.setEnabled(true);
                    if(jLabelMensajeError.getText() != ""){
                        jLabelMensajeError.setText("");
                    }
                }
            }
        }
    }
    private void comprimir(){
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarDir;
    private javax.swing.JButton botonBuscarDocs;
    private javax.swing.JButton jButtonComprimir;
    private javax.swing.JLabel jLabelMensajeError;
    private javax.swing.JLabel jLabelProgressDir;
    private javax.swing.JLabel jLabelProgressDocs;
    private javax.swing.JProgressBar jProgressDir;
    private javax.swing.JProgressBar jProgressDocs;
    private javax.swing.JTextField jTextDir;
    private javax.swing.JTextField jTextDocs;
    // End of variables declaration//GEN-END:variables
}
